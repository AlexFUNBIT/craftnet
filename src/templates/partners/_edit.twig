{% extends "_layouts/cp" %}
{% import "_includes/forms" as forms %}

{% set crumbs = [
    {label: 'Partners', url: url('partners')}
] %}

{% set fullPageForm = true %}
{% set saveShortcutRedirect = partner.getCpEditUrl() %}

{% block actionButton %}
    <div class="btngroup">
        <input type="submit" class="btn submit" value="Save">

        <div class="btn submit menubtn"></div>
        <div class="menu">
            {% if partner.pendingApproval %}
                <hr>
                <ul>
                    <li><a class="formsubmit" data-param="approve" data-value="1"><span class="status green"></span>Approve</a></li>
                    <li><a class="formsubmit" data-param="reject" data-value="1"><span class="status red"></span>Request changes</a></li>
                </ul>
                <hr>
            {% endif %}
            <ul>
                <li><a class="formsubmit" data-redirect="{{ saveShortcutRedirect|hash }}">
                        {{ forms.optionShortcutLabel('S') }}
                        Save and continue editing
                    </a></li>
                <li><a class="formsubmit" data-redirect="{{ ('partners/new')|hash }}">Save and add another</a></li>
            </ul>
            {% if partner.id %}
                <hr>
                <ul>
                    <li><a class="formsubmit error" data-action="craftnet/partners/delete" data-confirm="Are you sure you want to delete this partner?" data-redirect="{{ 'partners'|hash }}">Delete</a></li>
                </ul>
            {% endif %}
        </div>
    </div>
{% endblock %}


{% block content %}
    <div class="fields">
        <input type="hidden" name="action" value="craftnet/partners/save">
        <input type="hidden" name="redirect" value="{{ 'partners/{id}'|hash }}">
        {% if partner.id %}<input type="hidden" name="partnerId" value="{{ partner.id }}">{% endif %}

        {{ forms.textField({
            label: 'Business Name',
            required: true,
            id: 'businessName',
            name: 'businessName',
            value: partner.businessName,
            errors: partner.getErrors('businessName'),
        }) }}

        {{ forms.textField({
            label: 'Primary Contact Name',
            required: true,
            id: 'primaryContactName',
            name: 'primaryContactName',
            value: partner.primaryContactName,
            errors: partner.getErrors('primaryContactName'),
        }) }}

        {{ forms.textField({
            type: 'email',
            label: 'Primary Contact Email',
            required: true,
            id: 'primaryContactEmail',
            name: 'primaryContactEmail',
            value: partner.primaryContactEmail,
            errors: partner.getErrors('primaryContactEmail'),
        }) }}

        {{ forms.textField({
            type: 'phone',
            label: 'Primary Contact Phone',
            required: true,
            id: 'primaryContactPhone',
            name: 'primaryContactPhone',
            value: partner.primaryContactPhone,
            errors: partner.getErrors('primaryContactPhone'),
        }) }}

        {{ forms.textareaField({
            label: 'Business Summary',
            required: true,
            rows: 4,
            id: 'businessSummary',
            name: 'businessSummary',
            value: partner.businessSummary,
            errors: partner.getErrors('businessSummary'),
        }) }}

        {{ forms.textField({
            type: 'text',
            label: 'Minimum Budget',
            instructions: 'Amount in USD',
            required: true,
            id: 'minimumBudget',
            name: 'minimumBudget',
            value: partner.minimumBudget,
            errors: partner.getErrors('minimumBudget'),
        }) }}

        {{ forms.textField({
            type: 'url',
            label: 'Master Service Agreement Link',
            required: true,
            id: 'msaLink',
            name: 'msaLink',
            value: partner.msaLink,
            errors: partner.getErrors('msaLink'),
        }) }}

        {{ forms.checkboxGroupField({
            label: 'Capabilities',
            options: allCapabilities,
            values: partner.getCapabilities() | keys,
            name: 'capabilities',
            errors: partner.getErrors('capabilities'),
        }) }}

        {% macro locationForm(location) %}
            <table class="subform shadow-box">
                <thead>
                    <tr>
                        <td colspan="2">
                            <button class="btn subform-up">&uarr;</button>
                            <button class="btn subform-down">&darr;</button>
                            <button class="btn subform-delete">Delete</button>
                        </td>
                    </tr>
                </thead>
                <tbody>
                    <tr class="subform-row">
                        <th><label class="required">Title</label></th>
                        <td>
                            <input type="text" class="text" name="locations[title][]" value="{{ location.title ?? '' }}" autocomplete="off">
                            {% include "_includes/forms/errorList" with { errors: location.getErrors('title') ?? [] } %}
                        </td>
                    </tr>
                    <tr class="subform-row">
                        <th><label class="required">Address</label></th>
                        <td class="textual">
                            <input type="text" class="text" name="locations[addressLine1][]" value="{{ location.addressLine1 ?? '' }}" autocomplete="off">
                            {% include "_includes/forms/errorList" with { errors: location.getErrors('addressLine1') ?? [] } %}
                        </td>
                    </tr>
                    <tr class="subform-row">
                        <th><label>Address Line 2</label></th>
                        <td class="textual">
                            <input type="text" class="text" name="locations[addressLine2][]" value="{{ location.addressLine2 ?? '' }}" autocomplete="off">
                            {% include "_includes/forms/errorList" with { errors: location.getErrors('addressLine2') ?? [] } %}
                        </td>
                    </tr>
                    <tr class="subform-row">
                        <th><label class="required">City</label></th>
                        <td class="textual">
                            <input type="text" class="text" name="locations[city][]" value="{{ location.city ?? '' }}" autocomplete="off">
                            {% include "_includes/forms/errorList" with { errors: location.getErrors('city') ?? [] } %}
                        </td>
                    </tr>
                    <tr class="subform-row">
                        <th><label class="required">State</label></th>
                        <td class="textual">
                            <input type="text" class="text" name="locations[state][]" value="{{ location.state ?? '' }}" autocomplete="off">
                            {% include "_includes/forms/errorList" with { errors: location.getErrors('state') ?? [] } %}
                        </td>
                    </tr>
                    <tr class="subform-row">
                        <th><label class="required">Zip</label></th>
                        <td class="textual">
                            <input type="text" class="text" name="locations[zip][]" value="{{ location.zip ?? '' }}" autocomplete="off">
                            {% include "_includes/forms/errorList" with { errors: location.getErrors('zip') ?? [] } %}
                        </td>
                    </tr>
                    <tr class="subform-row">
                        <th><label class="required">Country</label></th>
                        <td class="textual">
                            <input type="text" class="text" name="locations[country][]" value="{{ location.country ?? '' }}" autocomplete="off">
                            {% include "_includes/forms/errorList" with { errors: location.getErrors('country') ?? [] } %}
                        </td>
                    </tr>
                    <tr class="subform-row">
                        <th><label>Phone</label></th>
                        <td class="textual">
                            <input type="text" class="text" name="locations[phone][]" value="{{ location.phone ?? '' }}" autocomplete="off">
                            {% include "_includes/forms/errorList" with { errors: location.getErrors('phone') ?? [] } %}
                        </td>
                    </tr>
                    <tr class="subform-row">
                        <th><label>Email</label></th>
                        <td class="textual">
                            <input type="text" class="text" name="locations[email][]" value="{{ location.email ?? '' }}" autocomplete="off">
                            {% include "_includes/forms/errorList" with { errors: location.getErrors('email') ?? [] } %}
                        </td>
                    </tr>
                </tbody>
            </table>
        {% endmacro %}

        {# Template for adding new locations dynamically #}
        {% import _self as self %}
        <script id="location-subform" type="text/html">{{ self.locationForm() }}</script>

        <div class="field">
            <div class="heading">
                <label>Locations</label>
            </div>
            <div id="location-subforms">
                {% for location in partner.locations | default([]) %}
                    {{ self.locationForm(location) }}
                {% endfor %}
            </div>
            <div>
                {% include "_includes/forms/errorList" with { errors: partner.getErrors('locations') ?? null } %}
                <button id="add-location" class="btn">Add a Location</button>
            </div>
        </div>

        {% js %}
            (function(window, document, $) {
                $('#add-location').click(function(e) {
                    e.preventDefault();
                    var template = $('#location-subform').html();
                    $('#location-subforms').append(template);
                });

                $('#location-subforms').on('click', '.subform-delete', function(e) {
                    e.preventDefault();
                     $(this).first().parents('.subform').remove();
                });

                $('#location-subforms').on('click', '.subform-up', function(e) {
                    e.preventDefault();
                    var $subform = $(this).first().parents('.subform').first();
                    var $subformAbove = $subform.prev('.subform');
                    if ($subformAbove.length) {
                        $subform.insertBefore($subformAbove).hide().fadeIn();
                    }
                });

                $('#location-subforms').on('click', '.subform-down', function(e) {
                    e.preventDefault();
                    var $subform = $(this).first().parents('.subform').first();
                    var $subformBelow = $subform.next('.subform');
                    if ($subformBelow.length) {
                        $subform.insertAfter($subformBelow).hide().fadeIn();
                    }
                });

            })(window, document,  jQuery)
        {% endjs %}

        {% css %}
            .subform { padding: 10px; }
            .subform + .subform { margin-top: 20px; }
            .subform thead td { text-align: right; }
            .subform tbody { padding: 5px 10px; }
            .subform td { padding: 5px 0; }
            .subform .text { width: 100%; }
            .btn:not(.submit).subform-delete { color: red; }
            #add-location { margin: 20px 0;
        {% endcss %}

    </div>
{% endblock %}

{% block details %}
    <div id="settings" class="meta">
        {{ forms.elementSelectField({
            first: true,
            label: 'Owner',
            required: true,
            id: 'ownerId',
            name: 'ownerId',
            elementType: 'craft\\elements\\User',
            sources: ['group:'~(craft.app.userGroups.getGroupByHandle('developers').id)],
            limit: 1,
            elements: partner.ownerId ? [partner.owner] : null,
            errors: partner.getErrors('ownerId'),
        }) }}

        {{ forms.lightswitchField({
            label: 'Enabled',
            id: 'enabled',
            name: 'enabled',
            on: partner.enabled,
        }) }}
    </div>
{% endblock %}
